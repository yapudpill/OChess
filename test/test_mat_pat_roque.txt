Position à tester :


Mat :

2k4R/8/2K5/8/8/8/8/8 b -
    (les noirs sont mats) -> vrai

2k5/7R/2K5/8/8/8/8/8 b -
    (il n'y a pas de mat) -> faux

2k5/8/1K1Q4/8/8/8/8/8 b -
    (la position est pat) -> faux

2k5/4N3/1K1Q4/8/8/8/8/8 b -
    (les noirs sont mat) -> vrai

rnb1k1nr/pppp1ppp/8/2b1p3/4P3/2N2N2/PPPP1qPP/R1BQKB1R w KQkq
    (les blancs sont mat) -> vrai

1kbnr/pppp1ppp/2n5/4p3/4P3/2N2N2/PPPP1qPP/R1BQKB1R w KQkq
    (les blancs ne sont pas mat (Rf2 est possible)) -> faux

1r6/2r5/8/8/8/8/8/1K6 w -
    (les blancs ne sont pas mat (Ra1) ) -> faux

1k6/8/8/8/8/8/r1r5/1K6 w -
    (la position est pat) -> faux



Pat

1k6/8/8/8/8/8/r1r5/1K6 w -
    (la position est pat) -> vrai

1k6/8/8/8/8/8/r1r5/1K6 b -
    (la position est la même qu'avant mais le trait n'est pas le même) -> faux

2k4R/8/2K5/8/8/8/8/8 b -
    (les noirs sont mats) -> faux

8/8/p2k1n2/Pp6/1P1K4/6r1/8/8 w -
    ( la position est pat) -> vrai

8/8/p2k2n1/Pp6/1P1K4/6r1/8/8 w -
    (la position n'est pas pat) -> faux



Roque

rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w - KQkq
    (position initiale donc ne peut pas roquer) -> faux

r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R w KQkq
    (les deux couleurs peuvent faire le petit roque mais pas le grand) -> tester les différents roques. petit => vrai et grand => faux

r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R w Qq
    aucun roque n'est possible ici.

r2qk2r/p1pp1ppp/bpn2n2/2b1p1B1/3PP3/1BN2N2/PPP2PPP/R2QK2R w KQkq
    (les blancs ne peuvent pas roquer et les noirs peuvent faire le petit roque)

r2qk2r/p1pp1ppp/bpn2n2/3Np1B1/1b2P3/1B1P1N2/PPP2PPP/R2QK2R w KQkq
    les blancs ne peuvent pas faire le petit roque car ils sont en échecs, les noirs peuvent faire le petit roque

r4rk1/pppbqppp/2n1pn2/3p4/1bPP1B2/2N1PN2/PPQ2PPP/R3KB1R w KQq
    les noirs on déja fait le petit roque. Ils ne peuvent plus roquer.
    les blancs peuvent faire le grand roque mais pas le petit roque




(*
let test_mat fen provenance attendu  =
  let p = creer_partie_fen fen in
  Alcotest.(check bool) ("Mat " ^ fen) attendu (ReglesBasiques.mat p provenance) *)

(* let mat_blancs () =
  test_mat "rnb1k1nr/pppp1ppp/8/2b1p3/4P3/2N2N2/PPPP1qPP/R1BQKB1R w KQkq" (5,1) true;
  test_mat "1kbnr/pppp1ppp/2n5/4p3/4P3/2N2N2/PPPP1qPP/R1BQKB1R w KQkq" (5,1) false;
  test_mat "1r6/2r5/8/8/8/8/8/1K6 w -" (1,7) false;
  test_mat "1k6/8/8/8/8/8/r1r5/1K6 w -" (1,3) false


let mat_noirs () =
  test_mat "2k4R/8/2K5/8/8/8/8/8 b -" (7,7) true;
  test_mat "2k5/4N3/1K1Q4/8/8/8/8/8 b -" (4,6) true;
  test_mat "2k5/7R/2K5/8/8/8/8/8 b -" (5,1) false;
  test_mat "2k5/8/1K1Q4/8/8/8/8/8 b -" (1,7) false *)


(* let mat = [
  "Mat Blancs", `Quick, mat_blancs;
  "Mat Noirs", `Quick, mat_noirs
] *)